/*
 * IRSendRaw.ino   Rev 1
 * Sends raw IR data on D10
 * For Uno, Nano, Pro Mini
 * No libraries needed
 * Sends automatically on boot.  Hit reset to send again.
 * Timing entries fetched directly from flash - PROGMEM
 * Circuit must turn on IR LED when D10 is high
 */

const byte irLED = 10;                                    // Timer 1 "B" output: OC1B
volatile unsigned int irCount;
volatile unsigned int newirCount;
volatile unsigned int irK;
unsigned int oldirK, first1;
byte oldTIMSK0;
unsigned long countDiv, halfDiv;

// raw definition arrays must be global

const unsigned int ON[] PROGMEM = {38199,   326,   197, 55783,  4351,  4410,   493,  1705,
   467,   597,   494,  1708,   467,  1705,   467,   598,
   493,   597,   494,  1705,   467,   600,   489,   604,
   493,  1709,   467,   597,   494,   597,   495,  1704,
   467,  1704,   468,   597,   494,  1711,   440,  1738,
   467,   597,   494,  1709,   467,  1704,   467,  1706,
   466,  1705,   467,  1705,   467,  1706,   440,   627,
   494,  1705,   467,   597,   494,   597,   494,   598,
   493,   598,   494,   597,   494,   599,   466,   628,
   494,   598,   493,  1709,   467,  1704,   467,   598,
   494,   597,   494,   598,   493,   600,   473,  1731,
   467,  1705,   467,   599,   493,   596,   494,  1706,
   466,  1706,   467,  1705,   466,  1705,   480,  5257,
  4353,  4413,   492,  1680,   491,   598,   494,  1683,
   493,  1680,   492,   598,   493,   597,   494,  1680,
   492,   600,   489,   603,   494,  1683,   493,   597,
   494,   598,   493,  1681,   491,  1680,   492,   598,
   493,  1685,   466,  1713,   492,   598,   493,  1685,
   491,  1680,   492,  1680,   492,  1680,   492,  1680,
   492,  1683,   488,   603,   492,  1681,   492,   598,
   492,   599,   492,   599,   492,   600,   490,   601,
   490,   603,   489,   604,   490,   601,   491,  1687,
   489,  1683,   489,   600,   491,   600,   491,   601,
   490,   602,   490,  1690,   490,  1682,   490,   600,
   491,   600,   491,  1682,   490,  1682,   490,  1682,
   489,  1686,   488

};

const unsigned int OFF[] PROGMEM = {11004, 23863,  4326,  4431,   468,  1705,   467,   603,
   487,  1710,   466,  1705,   467,   603,   488,   603,
   488,  1706,   466,   605,   488,   605,   488,  1709,
   467,   603,   488,   603,   488,  1705,   467,  1705,
   467,   603,   487,  1712,   467,   605,   487,  1706,
   467,  1704,   468,  1704,   467,  1704,   467,   603,
   489,  1708,   467,  1707,   468,  1710,   467,   603,
   488,   603,   487,   603,   489,   603,   488,  1705,
   466,   603,   488,   605,   489,  1710,   468,  1704,
   468,  1703,   468,   603,   488,   602,   489,   602,
   489,   603,   488,   605,   489,   604,   489,   602,
   489,   602,   489,  1709,   467,  1705,   468,  1704,
   467,  1705,   467,  1704,   468,  5294,  4328,  4437,
   468,  1705,   467,   602,   489,  1708,   468,  1705,
   467,   602,   488,   603,   489,  1704,   468,   604,
   488,   605,   488,  1708,   468,   603,   488,   602,
   489,  1704,   467,  1705,   467,   603,   488,  1710,
   468,   604,   489,  1704,   468,  1704,   468,  1703,
   468,  1705,   467,   603,   488,  1708,   468,  1705,
   468,  1711,   467,   602,   489,   603,   488,   602,
   489,   603,   487,  1704,   468,   603,   489,   605,
   488,  1710,   468,  1703,   468,  1704,   468,   603,
   488,   603,   488,   603,   487,   603,   488,   605,
   488,   606,   487,   603,   488,   603,   489,  1708,
   468,  1704,   468,  1704,   468,  1703,   469,  1706,
   468};

const unsigned int A[] PROGMEM = {29150, 18645,  4366,  4424,   466,  1703,   466,   603,
   486,  1707,   466,  1703,   465,   603,   487,   602,
   488,  1702,   466,   605,   487,   604,   488,  1707,
   466,   602,   487,   602,   487,  1703,   466,  1703,
   466,   602,   486,  1710,   466,   604,   487,   602,
   488,   602,   487,  1703,   466,  1703,   466,  1703,
   465,  1703,   466,  1705,   467,  1707,   467,  1702,
   467,  1702,   466,   602,   488,   601,   488,   602,
   487,   602,   488,   604,   487,   605,   487,   603,
   487,   602,   487,   602,   488,   602,   488,  1706,
   466,   603,   487,   604,   487,  1709,   466,  1703,
   466,  1703,   465,  1704,   465,  1703,   466,   602,
   488,  1706,   467,  1702,   467,  5286,  4321,  4432,
   466,  1702,   467,   602,   488,  1706,   467,  1702,
   466,   603,   486,   603,   487,  1702,   467,   605,
   487,   605,   486,  1706,   468,   602,   487,   603,
   487,  1702,   467,  1702,   466,   603,   486,  1709,
   468,   604,   487,   602,   487,   603,   487,  1702,
   468,  1701,   468,  1701,   468,  1701,   468,  1703,
   468,  1707,   467,  1702,   467,  1702,   466,   624,
   458,   631,   467,   623,   466,   623,   443,   649,
   465,   626,   443,   647,   466,   625,   464,   624,
   465,   626,   465,  1707,   465,   626,   464,   627,
   466,  1708,   465,  1704,   466,  1704,   465,  1704,
   467,  1701,   467,   625,   465,  1706,   467,  1705,
   467

};

const unsigned int B[] PROGMEM = {38769,   509,   912, 28071,  4313,  4432,   485,  1703,
   466,   602,   488,  1707,   466,  1703,   466,   601,
   489,   601,   489,  1703,   466,   603,   488,   604,
   488,  1707,   467,   600,   488,   602,   489,  1702,
   467,  1702,   467,   601,   488,  1709,   466,   603,
   489,   601,   489,   601,   488,  1703,   466,  1703,
   467,  1703,   466,  1702,   467,  1704,   467,  1709,
   467,  1702,   467,  1702,   467,   601,   489,   600,
   489,   601,   489,   601,   488,   604,   488,   603,
   489,   601,   489,   601,   489,  1706,   466,   601,
   489,  1706,   467,   602,   488,   603,   488,  1709,
   467,  1702,   467,  1703,   466,   601,   489,  1706,
   467,   601,   488,  1707,   467,  1702,   468,  5277,
  4325,  4410,   486,  1703,   467,   600,   490,  1705,
   467,  1703,   467,   601,   488,   602,   488,  1702,
   469,   601,   490,   602,   490,  1706,   466,   602,
   489,   601,   488,  1703,   467,  1702,   466,   602,
   489,  1708,   466,   604,   489,   601,   488,   601,
   489,  1703,   467,  1702,   467,  1702,   468,  1701,
   468,  1703,   467,  1709,   468,  1701,   468,  1702,
   467,   601,   489,   600,   490,   601,   489,   600,
   489,   603,   489,   602,   490,   601,   489,   601,
   489,  1705,   469,   600,   489,  1705,   468,   601,
   488,   603,   489,  1708,   468,  1701,   468,  1701,
   469,   600,   489,  1705,   468,   601,   489,  1706,
   466,  1705,   467
};

const unsigned int C[] PROGMEM = {4401,  4346,   517,  1672,   499,   590,   501,  1640,
   534,  1671,   499,   591,   501,   589,   500,  1675,
   495,   593,   532,   560,   501,  1598,   577,   589,
   500,   590,   501,  1617,   553,  1647,   525,   589,
   478,  1631,   602,   557,   479,   612,   502,   589,
   477,  1602,   568,  1698,   496,  1586,   585,  1586,
   585,  1566,   642,  1520,   623,  1562,   585,  1697,
   496,   590,   503,   586,   506,   584,   507,   585,
   506,   585,   543,   550,   507,   584,   507,  1669,
   502,  1669,   473,  1698,   473,   612,   506,   584,
   508,   585,   541,  1637,   478,  1694,   503,   581,
   507,   584,   483,   607,   483,  1695,   478,  1693,
   476,  1693,   550,  5187,  4374,  4383,   438,  1734,
   436,   652,   460,  1716,   459,  1712,   460,   630,
   461,   629,   460,  1711,   461,   632,   510,   582,
   461,  1716,   459,   630,   460,   630,   462,  1711,
   459,  1712,   460,   630,   461,  1717,   484,   607, 461,   630,   461,   629,   462,  1711,   459,  1712,
   459,  1711,   460,  1711,   460,  1713,   484,  1694,
   458,  1713,   459,  1712,   459,   631,   459,   632,
   459,   630,   460,   632,   459,   633,   507,   585,
   459,   633,   458,  1717,   454,  1718,   453,  1718,
   452,   634,   480,   612,   478,   638,   480,  1695,
   452,  1719,   452,   637,   453,   638,   453,   638,
   452,  1724,   452,  1720,   450,  1724,   450};

const unsigned int D[] PROGMEM = {277,  2458,   579, 64900,  4320,  4425,   466,  1704,
   465,   604,   485,  1708,   466,  1703,   465,   604,
   486,   604,   485,  1705,   465,   606,   510,   581,
   486,  1708,   465,   604,   486,   604,   486,  1703,
   466,  1704,   465,   603,   486,  1710,   491,   580,
   486,   604,   486,   604,   486,  1703,   467,  1703,
   465,  1704,   465,  1704,   465,  1706,   489,  1686,
   466,  1703,   466,  1704,   464,   604,   486,   604,
   486,   604,   486,   604,   486,   605,   510,   582,
   486,   604,   486,  1705,   465,   603,   486,   604,
   486,  1704,   466,   603,   487,   605,   487,  1709,
   466,  1704,   464,   605,   486,  1708,   465,  1704,
   465,   605,   484,  1709,   465,  1704,   466,  5289,
  4322,  4432,   467,  1703,   465,   604,   486,  1708,
   465,  1704,   466,   604,   486,   603,   486,  1704,
   466,   606,   510,   581,   487,  1708,   465,   604,
   486,   603,   487,  1703,   467,  1702,   467,   604,
   485,  1710,   491,   581,   486,   604,   486,   604,
   485,  1704,   466,  1703,   466,  1703,   467,  1702,
   467,  1704,   468,  1707,   467,  1702,   468,  1701,
   467,   623,   467,   623,   467,   622,   468,   622,
   466,   625,   492,   600,   466,   623,   467,  1703,
   465,   624,   443,   648,   466,  1704,   465,   624,
   465,   628,   465,  1709,   467,  1702,   466,   626,
   465,  1707,   465,  1704,   465,   627,   464,  1708,
   466,  1706,   466
};

const unsigned int E[] PROGMEM = { 14314,   437,   220,  4958,  4346,  4426,   466,  1704,
   465,   605,   485,  1708,   465,  1703,   465,   605,
   485,   605,   485,  1704,   466,   606,   511,   581,
   485,  1708,   464,   606,   485,   604,   486,  1703,
   466,  1703,   466,   604,   486,  1710,   491,   581,
   485,   604,   485,   605,   485,  1704,   466,  1704,
   465,  1703,   466,  1703,   465,  1707,   491,  1683,
   466,  1704,   465,  1703,   466,   604,   485,   607,
   483,   604,   486,   604,   485,   606,   512,   581,
   485,  1708,   466,  1704,   464,   605,   485,   605,
   485,  1704,   465,   605,   485,   606,   511,  1685,
   465,   605,   485,   604,   485,  1704,   466,  1704,
   464,   605,   485,  1709,   465,  1704,   466,  5288,
  4321,  4433,   466,  1703,   466,   605,   485,  1708,
   466,  1703,   466,   605,   485,   605,   485,  1703,
   466,   606,   511,   582,   484,  1708,   466,   604,
   485,   605,   486,  1704,   466,  1703,   467,   623,
   467,  1708,   468,   623,   467,   622,   467,   623,
   466,  1704,   466,  1704,   465,  1705,   465,  1704,
   465,  1705,   489,  1687,   466,  1703,   466,  1703,
   465,   626,   464,   626,   463,   627,   464,   626,
   462,   630,   488,   604,   464,  1708,   465,  1705,
   465,   627,   464,   625,   464,  1704,   465,   626,
   463,   629,   467,  1707,   464,   627,   463,   627,
   463,  1704,   465,  1705,   465,   627,   463,  1708,
   465,  1708,   465
};

const unsigned int F[] PROGMEM = { 4319,  4432,   467,  1703,   465,   605,   485,  1708,
   465,  1703,   465,   605,   486,   604,   485,  1704,
   465,   607,   510,   581,   485,  1709,   465,   604,
   485,   604,   486,  1703,   465,  1705,   465,   604,
   485,  1710,   491,   581,   485,   604,   485,   605,
   485,  1704,   465,  1703,   466,  1703,   466,  1704,
   465,  1706,   490,  1685,   465,  1703,   466,  1704,
   465,   604,   485,   605,   485,   605,   485,   604,
   485,   607,   511,   581,   485,  1708,   466,  1704,
   465,  1704,   466,   604,   485,  1708,   466,   604,
   485,   607,   510,  1685,   465,   605,   485,   604,
   485,   605,   485,  1709,   465,   604,   485,  1708,
   466,  1704,   466,  5280,  4322,  4433,   467,  1703,
   466,   605,   485,  1708,   465,  1704,   466,   604,
   485,   605,   486,  1704,   466,   607,   509,   582,
   485,  1708,   465,   604,   486,   605,   486,  1703,
   465,  1705,   465,   624,   466,  1709,   491,   581,
   486,   604,   485,   605,   486,  1704,   465,  1704,
   466,  1703,   466,  1704,   465,  1706,   491,  1685,
   466,  1703,   466,  1703,   466,   604,   485,   606,
   484,   604,   487,   603,   486,   607,   510,   581,
   485,  1708,   467,  1702,   467,  1703,   466,   605,
   484,  1708,   467,   603,   486,   606,   511,  1684,
   467,   604,   485,   605,   485,   604,   486,  1707,
   468,   623,   466,  1706,   468,  1705,   468
};


const unsigned int G[] PROGMEM = { 27536,   317,   962, 18784,  4321,  4431,   467,  1703,
   465,   603,   487,  1707,   466,  1703,   466,   602,
   488,   602,   486,  1704,   465,   606,   486,   605,
   487,  1707,   466,   603,   487,   602,   487,  1703,
   467,  1702,   467,   602,   486,  1709,   467,   604,
   487,   603,   486,   603,   488,  1703,   466,  1702,
   466,  1704,   466,  1703,   466,  1705,   466,  1709,
   465,  1704,   465,  1704,   466,   603,   487,   602,
   488,   602,   487,   603,   487,   604,   488,   604,
   487,  1707,   467,   602,   487,  1707,   467,   602,
   487,  1707,   466,   603,   487,   604,   487,  1709,
   467,   602,   487,  1707,   466,   603,   487,  1707,
   467,   602,   488,  1706,   466,  1704,   466,  5272,
  4322,  4431,   467,  1702,   467,   603,   487,  1705,
   467,  1703,   467,   602,   487,   603,   487,  1702,
   467,   605,   487,   605,   485,  1707,   467,   603,
   486,   603,   487,  1703,   467,  1702,   467,   602,
   487,  1708,   468,   604,   486,   604,   486,   604,
   486,  1703,   467,  1702,   468,  1701,   468,  1701,
   467,  1704,   468,  1707,   467,  1702,   466,  1703,
   441,   649,   442,   648,   442,   648,   441,   649,
   465,   626,   467,   625,   465,  1707,   466,   626,
   464,  1708,   441,   650,   464,  1708,   465,   627,
   464,   608,   485,  1708,   466,   606,   485,  1706,
   467,   605,   485,  1707,   467,   604,   485,  1707,
   466,  1706,   467
};


const unsigned int H[] PROGMEM = { 1416, 41793,  4338,  4430,   489,  1701,   469,   597,
   492,  1704,   468,  1701,   469,   598,   491,   599,
   491,  1701,   469,   599,   489,   603,   492,  1704,
   469,   598,   492,   597,   492,  1701,   469,  1699,
   469,   598,   493,  1705,   466,   602,   493,   598,
   492,   597,   492,  1701,   468,  1700,   469,  1700,
   469,  1700,   469,  1702,   465,  1710,   469,  1700,
   469,  1700,   469,   597,   492,   597,   493,   597,
   492,   598,   492,   600,   464,   627,   492,  1704,
   469,   598,   492,   597,   492,   598,   492,  1704,
   469,   597,   493,   599,   464,  1734,   469,   597,
   491,  1705,   469,  1700,   469,  1700,   469,   597,
   493,  1703,   470,  1699,   471,  5255,  4346,  4408,
   490,  1700,   469,   598,   491,  1705,   469,  1700,
   469,   598,   491,   598,   492,  1700,   469,   599,
   470,   622,   493,  1704,   468,   598,   492,   598,
   492,  1700,   469,  1700,   469,   598,   493,  1705,
   466,   603,   492,   598,   492,   598,   491,  1700,
   470,  1699,   469,  1700,   470,  1699,   470,  1702,
   465,  1708,   470,  1700,   470,  1699,   470,   598,
   492,   598,   492,   598,   492,   597,   493,   599,
   489,   603,   492,  1683,   489,   599,   492,   598,
   491,   599,   491,  1683,   490,   599,   491,   600,
   489,  1688,   489,   600,   491,  1683,   489,  1679,
   490,  1680,   488,   600,   490,  1685,   488,  1683,
   488
};


const unsigned int I[] PROGMEM = {3490,  4349,   502,  1567,   605,   587,   480,  1591,
   605,  1504,   667,   588,   506,   584,   507,  1607,
   537,   611,   543,   550,   508,  1672,   500,   585,
   509,   581,   511,  1643,   524,  1669,   474,   610,
   510,  1672,   537,   550,   510,   580,   510,   580,
   511,  1663,   505,  1668,   503,  1667,   502,  1668,
   503,  1669,   534,  1641,   480,  1691,   479,  1692,
   478,   608,   483,   606,   484,   606,   483,   608,
   482,   609,   512,  1662,   438,  1734,   436,   651,
   460,   630,   461,  1711,   437,   652,   460,   630,
   461,   630,   510,   583,   461,   629,   461,  1711,
   460,  1711,   460,   629,   460,  1716,   459,  1711,
   459,  1711,   517,  5220,  4340,  4416,   458,  1711,
   460,   629,   461,  1716,   459,  1710,   460,   629, 461,   630,   461,  1711,   459,   632,   508,   583,
   461,  1717,   457,   631,   481,   610,   481,  1694,
   454,  1717,   454,   631,   481,  1701,   502,   585,
   482,   610,   480,   609,   482,  1716,   454,  1717,
   453,  1718,   453,  1718,   453,  1720,   477,  1699,
   453,  1718,   451,  1721,   450,   638,   452,   639,
   452,   639,   451,   638,   453,   640,   478,  1696,
   451,  1720,   450,   639,   451,   639,   452,  1720,
   450,   640,   450,   640,   451,   641,   477,   617,
   450,   640,   450,  1722,   450,  1720,   451,   639,
   450,  1726,   449,  1721,   450,  1724,   450
};


const unsigned int J[] PROGMEM = { 251,  1647,   304,   821,   476, 47748,  4344,  4415,
   490,  1702,   467,   598,   493,  1705,   468,  1701,
   469,   596,   492,   599,   492,  1702,   467,   600,
   465,   627,   492,  1706,   468,   597,   493,   597,
   493,  1701,   468,  1701,   468,   598,   492,  1707,
   441,   626,   493,   597,   493,   596,   493,  1701,
   468,  1701,   469,  1700,   469,  1700,   470,  1702,
   440,  1735,   468,  1701,   469,  1701,   468,   598,
   492,   597,   492,   597,   493,   598,   492,   599,
   465,  1730,   469,  1701,   469,   597,   492,  1705,
   469,   597,   492,  1704,   469,   598,   493,   599,
   465,   627,   493,   596,   493,  1704,   470,   597,
   492,  1705,   469,   597,   492,  1705,   468,  1701,
   471,  5255,  4346,  4407,   491,  1700,   468,   599,
   492,  1704,   469,  1701,   468,   598,   492,   597,
   493,  1700,   470,   598,   466,   627,   492,  1705,
   469,   597,   492,   598,   492,  1700,   469,  1701,
   469,   597,   492,  1706,   453,   616,   493,   598,
   492,   598,   492,  1700,   470,  1700,   468,  1701,
   469,  1701,   469,  1702,   466,  1709,   470,  1700,
   470,  1699,   469,   599,   491,   598,   491,   599,
   492,   597,   493,   600,   488,  1705,   469,  1701,
   468,   600,   491,  1703,   470,   599,   490,  1705,
   469,   599,   491,   601,   488,   604,   490,   599,
   492,  1704,   469,   599,   491,  1704,   469,   600,
   490,  1704,   469,  1704,   467

};


const unsigned int K[] PROGMEM = {4318,  4426,   465,  1705,   465,   604,   485,  1708,
   465,  1704,   465,   604,   485,   605,   485,  1705,
   464,   606,   511,   582,   485,  1708,   465,   604,
   485,   605,   484,  1706,   464,  1705,   464,   605,
   485,  1710,   491,   581,   485,   604,   485,   605,
   485,  1705,   465,  1704,   465,  1704,   466,  1704,
   464,  1706,   490,  1686,   464,  1705,   464,  1705,
   465,   604,   485,   604,   485,   605,   486,   604,
   485,   607,   510,  1682,   465,   604,   485,   605,
   485,  1705,   465,   604,   485,  1709,   465,   603,
   486,   607,   510,   582,   484,  1706,   464,  1705,
   465,   604,   485,  1709,   465,   604,   486,  1708,
   465,  1704,   465,  5289,  4320,  4435,   465,  1705,
   464,   605,   485,  1709,   464,  1705,   465,   604,
   485,   605,   486,  1704,   464,   607,   511,   581,
   485,  1709,   466,   603,   486,   604,   485,  1705,
   466,  1704,   464,   605,   485,  1711,   490,   580,
   487,   604,   485,   605,   486,  1704,   465,  1704,
   466,  1704,   465,  1704,   465,  1706,   490,  1685,
   466,  1704,   466,  1704,   465,   604,   486,   603,
   486,   604,   486,   605,   485,   605,   511,  1681,
   466,   604,   486,   605,   485,  1704,   466,   604,
   485,  1707,   466,   605,   486,   605,   510,   581,
   487,  1704,   465,  1703,   466,   604,   486,  1707,
   466,   605,   485,  1707,   467,  1706,   466
};



const unsigned int L[] PROGMEM = {39726,   188,  1197, 47292,  4342,  4412,   489,  1702,
   466,   601,   490,  1705,   467,  1702,   467,   600,
   490,   599,   491,  1701,   467,   602,   489,   603,
   490,  1705,   467,   600,   490,   600,   489,  1702,
   468,  1701,   467,   600,   489,  1709,   466,   603,
   490,   600,   490,   599,   491,  1700,   469,  1701,
   468,  1701,   467,  1703,   467,  1704,   466,  1709,
   467,  1702,   467,  1702,   468,   600,   490,   600,
   489,   600,   490,   600,   490,   602,   489,  1705,
   468,   599,   490,   600,   490,   599,   490,   600,
   491,  1702,   467,   600,   490,   601,   490,   603,
   490,  1702,   467,  1702,   468,  1702,   467,  1702,
   467,   600,   490,  1706,   468,  1701,   470,  5240,
  4346,  4408,   489,  1701,   468,   600,   490,  1706,
   468,  1701,   468,   600,   490,   600,   490,  1701,
   468,   602,   489,   602,   492,  1704,   468,   599,
   491,   600,   490,  1701,   468,  1701,   468,   600,
   491,  1707,   466,   604,   490,   598,   493,   599,
   490,  1700,   468,  1703,   467,  1702,   468,  1701,
   469,  1702,   467,  1709,   469,  1700,   469,  1700,
   469,   599,   492,   598,   491,   599,   491,   599,
   491,   601,   489,  1703,   470,   599,   491,   599,
   490,   599,   491,   600,   490,  1700,   469,   600,
   490,   602,   488,   603,   491,  1681,   488,  1701,
   470,  1700,   468,  1681,   489,   599,   491,  1684,
   489,  1683,   488
};


const unsigned int M[] PROGMEM = { 302,   410,   244,   202,  1310,   726,   486, 62311,
  4321,  4429,   466,  1703,   466,   603,   487,  1707,
   466,  1704,   465,   603,   487,   603,   487,  1703,
   466,   605,   487,   604,   488,  1707,   465,   603,
   487,   603,   486,  1705,   465,  1704,   466,   602,
   487,  1710,   466,   604,   487,   603,   487,   603,
   487,  1704,   465,  1704,   466,  1703,   466,  1704,
   466,  1705,   466,  1709,   466,  1704,   466,  1703,
   466,   602,   488,   602,   488,   602,   487,   603,
   487,   605,   487,  1706,   466,   602,   487,  1708,
   465,   603,   487,   604,   486,  1704,   465,   603,
   487,   605,   487,   605,   487,  1703,   467,   602,
   487,  1708,   466,  1704,   466,   603,   486,  1708,
   466,  1703,   468,  5287,  4322,  4431,   468,  1703,
   467,   602,   487,  1707,   467,  1704,   466,   602,
   488,   602,   487,  1704,   467,   604,   487,   605,
   488,  1706,   467,   603,   487,   602,   488,  1702,
   468,  1703,   466,   603,   487,  1709,   467,   604,
   487,   602,   489,   602,   487,  1704,   466,  1703,
   467,  1702,   468,  1702,   466,  1706,   467,  1708,
   467,  1703,   467,  1702,   467,   603,   486,   605,
   486,   603,   487,   603,   487,   606,   487,  1704,
   467,   603,   487,  1707,   467,   603,   486,   604,
   486,  1704,   466,   604,   486,   605,   487,   605,
   487,  1704,   467,   603,   485,  1708,   468,  1702,
   468,   603,   486,  1706,   468,  1706,   466
};


const unsigned int N[] PROGMEM = {598, 23494,  4341,  4430,   489,  1701,   469,   599,
   490,  1706,   468,  1701,   467,   600,   490,   600,
   491,  1700,   468,   601,   489,   603,   491,  1705,
   468,   600,   490,   599,   490,  1702,   469,  1700,
   468,   600,   490,  1707,   466,   604,   491,   599,
   490,   599,   490,  1702,   468,  1702,   467,  1702,
   467,  1702,   468,  1703,   467,  1708,   469,  1701,
   468,  1701,   467,   600,   490,   600,   490,   600,
   490,   600,   490,   602,   488,  1705,   469,   599,
   490,  1706,   468,  1701,   468,   600,   490,  1706,
   467,   599,   491,   602,   488,   603,   492,  1701,
   467,   600,   491,   599,   490,  1701,   469,   599,
   491,  1705,   469,  1700,   469,  5265,  4346,  4407,
   490,  1700,   469,   599,   491,  1704,   470,  1699,
   469,   599,   492,   597,   492,  1700,   469,   601,
   489,   603,   490,  1705,   470,   598,   491,   599,
   491,  1700,   468,  1682,   489,   600,   490,  1686,
   488,   603,   491,   598,   492,   598,   492,  1679,
   490,  1679,   489,  1681,   490,  1679,   490,  1682,
   488,  1687,   489,  1680,   490,  1680,   490,   598,
   492,   599,   491,   599,   491,   599,   490,   601,
   489,  1684,   491,   598,   491,  1684,   490,  1680,
   489,   599,   491,  1684,   489,   599,   490,   602,
   488,   604,   489,  1682,   488,   601,   488,   602,
   489,  1681,   488,   600,   490,  1686,   488,  1684,
   487

};


const unsigned int FAN_SPEED_HIGH[] PROGMEM  = { 4319,  4445,   466,  1704,   465,   605,   485,  1709,
   465,  1705,   465,   604,   486,   603,   487,  1704,
   465,   607,   510,   581,   487,  1708,   465,   604,
   486,   604,   486,  1705,   465,  1704,   466,   604,
   486,  1710,   467,   605,   486,   603,   487,  1708,
   465,  1705,   465,  1704,   466,  1705,   465,  1705,
   465,  1706,   490,  1686,   465,  1705,   465,   604,
   486,   604,   486,   604,   486,   604,   486,   604,
   486,   606,   491,  1706,   465,  1705,   466,  1704,
   465,   604,   486,   604,   486,  1705,   465,   605,
   486,   605,   488,   604,   486,   604,   487,   603,
   486,  1704,   466,  1705,   465,   604,   486,  1709,
   466,  1704,   466,  5290,  4321,  4434,   465,  1705,
   466,   604,   486,  1708,   466,  1704,   466,   603,
   487,   603,   487,  1704,   466,   606,   487,   605,
   486,  1708,   466,   603,   487,   604,   486,  1704,
   467,  1703,   466,   604,   486,  1710,   467,   604,
   487,   604,   487,  1707,   466,  1704,   467,  1703,
   467,  1703,   467,  1704,   466,  1705,   467,  1709,
   467,  1703,   466,   604,   487,   603,   486,   604,
   486,   604,   486,   604,   486,   606,   488,  1708,
   467,  1704,   466,  1703,   467,   604,   486,   603,
   486,  1704,   467,   603,   486,   607,   510,   582,
   485,   605,   486,   604,   486,  1703,   467,  1703,
   467,   604,   486,  1707,   468,  1705,   467

};

const unsigned int FAN_SPEED_MEDIUM[] PROGMEM = {248,   198,   139,   521,   340,  1483,   198, 58024,
  4318,  4442,   466,  1705,   465,   604,   486,  1709,
   465,  1705,   465,   604,   486,   603,   486,  1705,
   466,   605,   510,   582,   486,  1709,   465,   604,
   486,   604,   485,  1705,   465,  1705,   465,   604,
   486,  1710,   490,   581,   486,  1704,   466,   604,
   486,  1708,   465,  1704,   466,  1704,   465,  1705,
   465,  1707,   490,  1685,   466,   604,   485,  1709,
   466,   604,   485,   603,   487,   604,   486,   604,
   486,   605,   511,  1683,   465,  1705,   464,  1705,
   465,   604,   486,   604,   485,  1705,   466,   604,
   486,   606,   511,   581,   486,   604,   486,   604,
   485,  1705,   466,  1703,   466,   604,   486,  1708,
   466,  1704,   466,  5291,  4319,  4434,   467,  1704,
   465,   604,   486,  1708,   466,  1704,   466,   604,
   486,   602,   487,  1705,   465,   606,   487,   605,
   486,  1708,   466,   603,   486,   604,   486,  1704,
   465,  1704,   467,   603,   486,  1709,   491,   582,
   485,  1703,   466,   605,   486,  1707,   466,  1704,
   466,  1703,   467,  1703,   466,  1706,   491,  1685,
   466,   604,   485,  1708,   467,   604,   485,   605,
   485,   605,   486,   604,   485,   607,   511,  1681,
   467,  1702,   469,  1701,   467,   624,   466,   623,
   467,  1704,   465,   624,   465,   627,   467,   625,
   467,   624,   467,   623,   466,  1703,   465,  1706,
   464,   627,   463,  1709,   467,  1707,   467
};


const unsigned int FAN_SPEED_LOW[] PROGMEM = {1396, 15725,  4318,  4410,   485,  1705,   465,   603,
   487,  1708,   466,  1704,   465,   603,   488,   603,
   487,  1703,   466,   605,   487,   605,   487,  1708,
   466,   602,   487,   603,   488,  1703,   466,  1704,
   466,   603,   487,  1710,   466,  1710,   465,   603,
   487,   603,   487,  1705,   465,  1704,   466,  1704,
   465,  1704,   467,  1706,   467,   603,   487,  1704,
   466,  1703,   467,   602,   488,   602,   488,   603,
   487,   602,   487,   605,   488,  1705,   465,  1704,
   467,  1704,   466,   603,   487,   603,   486,  1704,
   466,   603,   487,   605,   488,   604,   486,   604,
   487,   602,   488,  1703,   466,  1704,   466,   603,487,  1709,   465,  1704,   468,  5265,  4320,  4434,
   466,  1704,   466,   603,   487,  1708,   466,  1704,
   466,   602,   488,   602,   488,  1703,   466,   606,
   487,   605,   486,  1709,   466,   602,   487,   603,
   487,  1704,   466,  1704,   466,   602,   488,  1710,
   465,  1710,   466,   603,   487,   603,   487,  1703,
   467,  1703,   467,  1704,   466,  1703,   467,  1705,
   467,   603,   488,  1704,   466,  1704,   466,   603,
   487,   602,   488,   603,   487,   602,   488,   604,
   488,  1705,   467,  1703,   467,  1703,   467,   603,
   487,   603,   487,  1702,   468,   603,   487,   605,
   488,   604,   487,   602,   487,   604,   486,  1704,
   467,  1703,   467,   603,   487,  1707,   467,  1706,
   468
};


const unsigned int FAN_SPEED_AUTO[] PROGMEM = { 899, 64193,  4317,  4441,   465,  1706,   464,   605,
   485,  1709,   464,  1706,   465,   604,   484,   605,
   485,  1705,   464,   608,   510,   581,   486,  1708,
   465,   605,   485,   604,   486,  1705,   464,  1705,
   464,   606,   484,  1711,   490,  1686,   464,   605,
   485,  1709,   464,  1705,   465,  1705,   464,  1705,
   465,  1705,   464,  1707,   490,   581,   485,  1705,
   465,   604,   486,   605,   485,   604,   485,   605,
   485,   604,   486,   607,   510,  1685,   465,  1705,
   465,  1705,   465,   604,   485,   604,   485,  1706,
   465,   604,   485,   607,   510,   581,   486,   605,
   485,   604,   486,  1705,   466,  1704,   464,   604,
   486,  1708,   466,  1704,   465,  5291,  4319,  4434,
   466,  1705,   466,   604,   485,  1708,   466,  1705,
   465,   605,   485,   605,   485,  1704,   466,   607,
   510,   581,   486,  1708,   465,   606,   484,   605,
   485,  1704,   466,  1704,   466,   605,   485,  1710,
   492,  1683,   466,   605,   485,  1708,   466,  1703,
   467,  1703,   467,  1703,   467,  1703,   466,  1706,
   491,   581,   485,  1704,   467,   624,   466,   624,
   467,   623,   466,   623,   467,   623,   467,   624,
   468,  1709,   465,  1705,   465,  1704,   466,   624,
   466,   624,   466,  1704,   465,   626,   464,   627,
   466,   627,   466,   624,   464,   626,   465,  1704,
   466,  1704,   466,   625,   464,  1708,   467,  1706,
   466
};


const unsigned int MODE_AUTO[] PROGMEM =    {32966,  1844,   229,   900,   486, 22271,  4292,  4450,
   467,  1704,   465,   605,   485,  1709,   464,  1706,
   464,   605,   486,   604,   485,  1705,   465,   607,
   510,   581,   486,  1708,   465,   605,   485,   605,
   485,  1706,   464,  1705,   465,   605,   485,  1711,
   490,   582,   485,   605,   485,   605,   485,  1705,
   464,  1706,   465,  1705,   465,  1705,   464,  1707,
   491,  1685,   465,  1705,   465,  1705,   464,   605,
   485,   605,   486,   604,   485,   605,   485,   607,
   510,  1682,   465,   605,   485,  1709,   464,  1706,
   464,  1705,   465,   605,   485,   605,   485,   607,
   509,   582,   485,  1710,   464,   606,   485,   603,
   486,   606,   484,  1709,   465,  1705,   465,  1705,
   465,  5290,  4319,  4434,   467,  1704,   465,   605,
   485,  1708,   466,  1705,   465,   625,   465,   604,
   485,  1704,   466,   608,   510,   582,   484,  1708,
   466,   605,   485,   605,   485,  1704,   466,  1703,
   466,   606,   484,  1711,   492,   580,   486,   604,
   485,   605,   485,  1704,   466,  1704,   467,  1703,
   467,  1702,   467,  1705,   469,  1707,   466,  1704,
   464,  1705,   465,   624,   467,   623,   467,   624,
   466,   623,   466,   627,   490,  1682,   464,   625,
   466,  1708,   466,  1704,   466,  1704,   465,   625,
   466,   625,   465,   627,   465,   627,   465,  1708,
   465,   626,   464,   626,   463,   627,   463,  1709,
   465,  1705,   465,  1708,   465

};
const unsigned int MODE_COOL[] PROGMEM =    {3158,  4444,   522,  1654,   518,   566,   494,  1680,
   523,  1653,   517,   567,   520,   570,   518,  1651,
   523,   571,   521,   570,   494,  1680,   523,   568,
   494,   596,   493,  1676,   521,  1651,   519,   570,
   518,  1657,   557,  1620,   522,   569,   491,   599,
   491,  1679,   518,  1651,   520,  1651,   519,  1650,
   518,  1654,   554,   540,   490,  1679,   518,  1651,
   517,   575,   490,   599,   490,   601,   490,   600,
   488,   604,   492,  1679,   492,  1678,   491,   601,
   466,  1707,   491,   600,   488,   602,   488,   601,
   467,   626,   467,   625,   466,   624,   466,  1707,
   483,   608,   466,  1707,   467,  1703,   467,  1703,
   467,  1704,   441,  5317,  4315,  4440,   467,  1703,
   468,   623,   466,  1708,   467,  1704,   466,   624,
   466,   624,   467,  1704,   466,   625,   492,   600,
   491,  1684,   467,   623,   466,   624,   467,  1703,
   466,  1704,   466,   623,   466,  1711,   491,  1685,
   465,   624,   466,   624,   465,  1706,   465,  1705,
   465,  1704,   466,  1704,   466,  1706,   491,   601,
   466,  1705,   465,  1704,   466,   623,   466,   625, 465,   625,   465,   625,   465,   627,   490,  1682,
   465,  1707,   463,   625,   465,  1710,   465,   624,
   465,   626,   464,   626,   464,   628,   476,   617,
   461,   628,   463,  1713,   461,   626,   464,  1714,
   461,  1713,   456,  1714,   456,  1739,   434};



const unsigned int MODE_DRY[] PROGMEM =    { 326,   562,   273,   448,   201, 26763,  4318,  4440,
   465,  1705,   465,   630,   460,  1709,   465,  1704,
   466,   630,   459,   608,   483,  1705,   464,   632,
   486,   584,   482,  1709,   465,   607,   483,   607,
   483,  1705,   464,  1706,   465,   608,   482,  1711,
   490,   584,   483,   607,   482,   608,   483,  1705,
   464,  1705,   465,  1706,   464,  1705,   465,  1707,
   491,  1684,   466,  1704,   465,  1705,   466,   607,
   482,   608,   482,   608,   482,   607,   484,   608,
   509,  1681,   465,   629,   461,  1709,   465,  1705,
   465,   607,   483,  1709,   465,   630,   460,   631,
   487,   583,   483,  1705,   464,   607,   484,   607,
   483,  1705,   465,   607,   483,  1709,   465,  1705,
   465,  5292,  4319,  4434,   467,  1705,   465,   628,
   462,  1709,   465,  1706,   464,   629,   462,   627,
   463,  1704,   466,   628,   490,   605,   461,  1709,
   465,   626,   464,   626,   464,  1705,   466,  1704,
   466,   625,   464,  1712,   491,   601,   465,   626,
   464,   625,   465,  1705,   466,  1704,   465,  1705,
   465,  1705,   466,  1705,   492,  1685,   466,  1704,
   466,  1704,   465,   625,   466,   624,   465,   625,
   466,   624,   467,   626,   491,  1680,   466,   625,
   465,  1708,   466,  1704,   467,   625,   465,  1707,
   467,   625,   465,   627,   491,   601,   465,  1703,
   467,   625,   465,   626,   465,  1703,   466,   626,
   465,  1707,   467,  1706,   468
};

const unsigned int MODE_FAN[] PROGMEM =    { 32987,   187,   319,   754,   399, 22637,  4292,  4449,
   466,  1705,   464,   604,   486,  1709,   465,  1704,
   465,   604,   486,   604,   486,  1705,   465,   605,
   511,   581,   486,  1709,   465,   604,   485,   605,
   486,  1704,   465,  1705,   465,   604,   486,  1711,
   490,   581,   485,   605,   485,  1710,   465,  1704,
   465,  1705,   466,  1704,   466,  1704,   465,  1707,
   490,  1685,   466,  1705,   465,   604,   485,   605,
   485,   605,   486,   604,   486,   604,   486,   607,
   510,  1686,   465,  1705,   465,  1705,   465,   605,
   486,   604,   486,  1705,   466,   603,   486,   606,
   511,   581,   486,   604,   486,   604,   487,  1704,
   466,  1704,   466,   604,   486,  1708,   465,  1706,
   465,  5292,  4319,  4435,   466,  1705,   465,   604,
   486,  1709,   465,  1704,   466,   603,   486,   605,
   485,  1705,   466,   606,   510,   582,   485,  1709,
   465,   605,   485,   604,   487,  1704,   466,  1704,
   466,   603,   486,  1711,   490,   581,   486,   605,
   484,  1709,   465,  1704,   466,  1703,   467,  1704,
   465,  1704,   467,  1705,   492,  1684,   467,  1703,
   466,   605,   486,   604,   485,   606,   485,   604,
   486,   604,   485,   608,   510,  1685,   466,  1705,
   466,  1703,   467,   604,   485,   605,   485,  1705,
   468,   623,   466,   626,   467,   625,   467,   622,
   467,   623,   467,  1704,   465,  1706,   464,   625,
   467,  1707,   467,  1707,   464

};
  
void setup() {

  pinMode (irLED, OUTPUT); digitalWrite(irLED,LOW);  // D10 normally output low = IR LED off
  pinMode (LED_BUILTIN, OUTPUT);                     // indicator LED
  digitalWrite(LED_BUILTIN,LOW);
  TCCR1A = bit (WGM10) | bit (WGM11);                // fast PWM, normal port
  TCCR1B = bit (WGM12) | bit (WGM13);                // fast PWM, timer stopped
  first1 = 1;                                        // first blob needs adjustment
  TIMSK1 = bit (OCIE1B);                             // enable interrupt - each cycle

  Serial.begin(9600);
  Serial.println("Type to send the IR command.");
}

void loop() {

  if (Serial.available()) {
        String input = Serial.readStringUntil('\n'); // Read input until newline

        if (input.equalsIgnoreCase("on")) { // Check if input is "on"
            sendRaw (ON , sizeof(ON) / sizeof(ON[0]), 38);               // Send an array of raw data, KHz
            Serial.println("AC ON");
        } 

        else if (input.equalsIgnoreCase("off")) { 
            sendRaw(OFF, sizeof(OFF) / sizeof(OFF[0]), 38);
            Serial.println("AC OFF");}

        else if (input.equalsIgnoreCase("17")) { 
            sendRaw(A, sizeof(A) / sizeof(A[0]), 38);
            Serial.println("Temperature = 17°C");}

        else if (input.equalsIgnoreCase("18")) { 
            sendRaw(B, sizeof(B) / sizeof(B[0]), 38);
            Serial.println("Temperature = 18°C");}

        else if (input.equalsIgnoreCase("19")) { 
            sendRaw(C, sizeof(C) / sizeof(C[0]), 38);
            Serial.println("Temperature = 19°C");}

        else if (input.equalsIgnoreCase("20")) { 
            sendRaw(D, sizeof(D) / sizeof(D[0]), 38);
            Serial.println("Temperature = 20°C");}

        else if (input.equalsIgnoreCase("21")) { 
            sendRaw(E, sizeof(E) / sizeof(E[0]), 38);
            Serial.println("Temperature = 21°C");}

        else if (input.equalsIgnoreCase("22")) { 
            sendRaw(F, sizeof(F) / sizeof(F[0]), 38);
            Serial.println("Temperature = 22°C");}

        else if (input.equalsIgnoreCase("23")) { 
            sendRaw(G, sizeof(G) / sizeof(G[0]), 38);
            Serial.println("Temperature = 23°C");}

        else if (input.equalsIgnoreCase("24")) { 
            sendRaw(H, sizeof(H) / sizeof(H[0]), 38);
            Serial.println("Temperature = 24°C");}

        else if (input.equalsIgnoreCase("25")) { 
            sendRaw(I, sizeof(I) / sizeof(I[0]), 38);
            Serial.println("Temperature = 25°C");}

        else if (input.equalsIgnoreCase("26")) { 
            sendRaw(J, sizeof(J) / sizeof(J[0]), 38);
            Serial.println("Temperature = 26°C");}

        else if (input.equalsIgnoreCase("27")) { 
            sendRaw(K, sizeof(K) / sizeof(K[0]), 38);
            Serial.println("Temperature = 27°C");}

        else if (input.equalsIgnoreCase("28")) { 
            sendRaw(L, sizeof(L) / sizeof(L[0]), 38);
            Serial.println("Temperature = 28°C");}

        else if (input.equalsIgnoreCase("29")) { 
            sendRaw(M, sizeof(M) / sizeof(M[0]), 38);
            Serial.println("Temperature = 29°C");}

        else if (input.equalsIgnoreCase("30")) { 
            sendRaw(N, sizeof(N) / sizeof(N[0]), 38);
            Serial.println("Temperature = 30°C");}


        else if (input.equalsIgnoreCase("fanhigh")) { 
            sendRaw(FAN_SPEED_HIGH, sizeof(FAN_SPEED_HIGH) / sizeof(FAN_SPEED_HIGH[0]), 38);
            Serial.println("FAN --- HIGH");}

        else if (input.equalsIgnoreCase("fanmedium")) { 
            sendRaw(FAN_SPEED_MEDIUM, sizeof(FAN_SPEED_MEDIUM) / sizeof(FAN_SPEED_MEDIUM[0]), 38);
            Serial.println("FAN --- MEDIUM");}

        else if (input.equalsIgnoreCase("fanlow")) { 
            sendRaw(FAN_SPEED_LOW, sizeof(FAN_SPEED_LOW) / sizeof(FAN_SPEED_LOW[0]), 38);
            Serial.println("FAN --- LOW");}

        else if (input.equalsIgnoreCase("fanauto")) { 
            sendRaw(FAN_SPEED_AUTO, sizeof(FAN_SPEED_AUTO) / sizeof(FAN_SPEED_AUTO[0]), 38);
            Serial.println("FAN --- AUTO");}

        else if (input.equalsIgnoreCase("modecool")) { 
            sendRaw(MODE_COOL, sizeof(MODE_COOL) / sizeof(MODE_COOL[0]), 38);
            Serial.println("MODE COOL");}

        else if (input.equalsIgnoreCase("modedry")) { 
            sendRaw(MODE_DRY, sizeof(MODE_DRY) / sizeof(MODE_DRY[0]), 38);
            Serial.println("MODE DRY");}

        else if (input.equalsIgnoreCase("modefan")) { 
            sendRaw(MODE_FAN, sizeof(MODE_FAN) / sizeof(MODE_FAN[0]), 38);
            Serial.println("MODE FAN");}
        
        else if (input.equalsIgnoreCase("modeauto")) { 
            sendRaw(MODE_AUTO, sizeof(MODE_AUTO) / sizeof(MODE_AUTO[0]), 38);
            Serial.println("MODE AUTO");}
        
        else {
            Serial.println("Invalid command...");
        }
    }                                          
}

void sendRaw(const unsigned int buf[], unsigned int len, unsigned int hz) {

  oldTIMSK0 = TIMSK0;                                // disable millis interrupt
  TIMSK0 = 0;
  digitalWrite(LED_BUILTIN, HIGH);                   // indicator LED on
  irK = 0;
  oldirK = 0;
  countDiv = (1024000 + (hz/2)) / hz;                // rounded number of hz cycles * 1024
  halfDiv = (countDiv + 1) / 2;                      // half of countDiv
  irCount = Calculate(pgm_read_word_near(buf)) + first1;  // timer count for first value of array
  newirCount = Calculate(pgm_read_word_near(buf+1)); //    and second value
  first1 = 0;
  OCR1A = (((F_CPU/1000) +hz/2) / hz) - 1;           // TOP, zero relative
  OCR1B = OCR1A / 3;                                 // 33% duty cycle
  TCNT1 = OCR1A / 2;                                 // timer count just past OCR1B
  TCCR1A |= bit (COM1B1);                            // clear output on B match
  TCCR1B |= bit (CS10);                              // fast PWM, no prescaler, timer on

  while (irK < len) {
    while (oldirK == irK);                           // wait for interrupt
    if (irK < (len - 1)) newirCount = Calculate (pgm_read_word_near(buf+(irK+1)));
    oldirK = irK;
  }
  TCCR1B &= ~bit(CS10);                              // stop clock
  TCCR1A &= ~bit(COM1B1);                            // disconnect output
  TIMSK0 = oldTIMSK0;                                // re-enable millis
  digitalWrite(LED_BUILTIN, LOW);                    // indicator LED off
}

unsigned int Calculate (unsigned int buf) {          // calculate number of timer cycles
  long temp = buf;
  return ((temp << 10) + halfDiv) / countDiv;
}

ISR(TIMER1_COMPB_vect) {                             // interrupt when output cleared at OCR1B
  irCount--;
  if (irCount == 0) {
    TCCR1A ^= bit (COM1B1);                          // Connect or disconnect D10 to Timer1 output
    irK++;
    irCount = newirCount;                            // get next value
  }
}
